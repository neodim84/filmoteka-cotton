{"mappings":"iiBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,0BAeAE,EAAAC,KAAKC,WAAWC,iBAAiB,SAXjC,WACE,IAAMC,GAAgB,EAAAL,EAAAM,MAAK,WAE3B,GAA6B,IAAzBD,EAAcE,OAAc,CAC9BN,EAAAC,KAAKM,aAAaC,UAAUC,IAAI,mBAChCT,EAAAC,KAAKS,YAAYC,UAAY,GAC7B,IAAMC,GAAgB,EAAAC,EAAAC,qBAAoBV,GAC1CJ,EAAAC,KAAKS,YAAYK,mBAAmB,YAAaH,E,gBCXrD,IAAAI,EAAAlB,EAAA,S,6DAKemB,I,OAAAA,EAAfC,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,EAA6BC,G,IAOnBC,EACAC,EAOEC,EACAC,E,qEAfVJ,EAAEK,iBACFC,OAAOzB,iBAAiB,UAAW0B,IACvBP,EAAEQ,OAAOC,QAAQ,mBACjBT,EAAEQ,OAAOtB,UAAUwB,SAAS,iBAAgB,C,uBACtDhC,EAAAC,KAAKgC,cAAcC,YAAc,sBAE3BX,EAAYD,EAAEQ,OACdN,EAAUD,EAAUY,QAAQC,GAClCpC,EAAAC,KAAKoC,MAAM7B,UAAU8B,OAAO,aAC5BtC,EAAAC,KAAKsC,KAAK/B,UAAU8B,OAAO,aAC3BtC,EAAAC,KAAKgC,cAAcO,aAAa,UAAWhB,GAC3CxB,EAAAC,KAAKwC,YAAYD,aAAa,UAAWhB,G,oBAGfkB,EAAAC,aAAiBnB,G,QAAnCC,EAASmB,EAAAC,KACTnB,GAAc,EAAAb,EAAAiC,mBAAkBrB,GACtCzB,EAAAC,KAAK8C,UAAUhC,mBAAmB,YAAaW,G,mDAK/CsB,QAAQC,IAAIL,EAAAM,GAAMC,S,4DAtBIC,MAAAC,KAAAC,U,CA2B5B,SAASC,IACPvD,EAAAC,KAAKoC,MAAM7B,UAAU8B,OAAO,aAC5BtC,EAAAC,KAAKsC,KAAK/B,UAAU8B,OAAO,aAE3BtC,EAAAC,KAAK8C,UAAUpC,UAAY,E,CAG7B,SAASkB,EAASP,GACD,WAAXA,EAAEkC,OACJD,IACA3B,OAAO6B,oBAAoB,UAAW5B,G,YAI1C7B,EAAAC,KAAKyD,cAAcvD,iBAAiB,QAASoD,GAC7CvD,EAAAC,KAAKS,YAAYP,iBAAiB,S,SA1CLmB,G,OAAdL,EAAamC,MAAAC,KAAAC,U","sources":["src/library-index.js","src/js/library.js","src/js/modal-library.js"],"sourcesContent":["import './js/theme';\nimport './js/library';\nimport './js/modal-footer';\nimport './js/modal-library';\n","import { load } from '../utils/storage';\nimport { refs } from './refs';\nimport { createMarkupLibrary } from './createMarkup';\n\nfunction onClickWatched() {\n  const moviesWatched = load('watched');\n\n  if (moviesWatched.length !== 0) {\n    refs.titleLibrary.classList.add('visually-hidden');\n    refs.listLibrary.innerHTML = '';\n    const markupLibrary = createMarkupLibrary(moviesWatched);\n    refs.listLibrary.insertAdjacentHTML('beforeend', markupLibrary);\n  }\n}\n\nrefs.btnWatched.addEventListener('click', onClickWatched);\n","import * as API from './api';\nimport { createMarkupModal } from './createMarkup';\nimport { refs } from './refs';\nimport { remove } from '../utils/storage';\n\nasync function onCardLibrary(e) {\n  e.preventDefault();\n  window.addEventListener('keydown', onEscKey);\n  const elt = e.target.closest('.library__list');\n  if (elt && !e.target.classList.contains('library__link')) {\n    refs.btnAddWatched.textContent = 'Remove from watched';\n\n    const currentEl = e.target;\n    const movieId = currentEl.dataset.id;\n    refs.modal.classList.toggle('is-hidden');\n    refs.body.classList.toggle('no-scroll');\n    refs.btnAddWatched.setAttribute('data-id', movieId);\n    refs.btnAddQueue.setAttribute('data-id', movieId);\n\n    try {\n      const movieInfo = await API.getMovieById(movieId);\n      const markupModal = createMarkupModal(movieInfo);\n      refs.modalList.insertAdjacentHTML('beforeend', markupModal);\n      // здесь кнопки становяться с действием REMOVE поэтому вожможно нужен класс modal__btn--remove (или дата атрибут)\n      //   addToWatchedBtn.addEventListener('click', addToWatched);\n      //   addToQueuedBtn.addEventListener('click', addToQueue);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction onCloseBtn() {\n  refs.modal.classList.toggle('is-hidden');\n  refs.body.classList.toggle('no-scroll');\n\n  refs.modalList.innerHTML = '';\n}\n\nfunction onEscKey(e) {\n  if (e.code === 'Escape') {\n    onCloseBtn();\n    window.removeEventListener('keydown', onEscKey);\n  }\n}\n\nrefs.closeModalBtn.addEventListener('click', onCloseBtn);\nrefs.listLibrary.addEventListener('click', onCardLibrary);\n"],"names":["parcelRequire","$hBW9e","$4Nugj","refs","btnWatched","addEventListener","moviesWatched","load","length","titleLibrary","classList","add","listLibrary","innerHTML","markupLibrary","$9XBOy","createMarkupLibrary","insertAdjacentHTML","$bpxeT","$5274909fd9dfb2b1$var$_onCardLibrary","$parcel$interopDefault","$2TvXO","mark","_callee","e","currentEl","movieId","movieInfo","markupModal","preventDefault","window","$5274909fd9dfb2b1$var$onEscKey","target","closest","contains","btnAddWatched","textContent","dataset","id","modal","toggle","body","setAttribute","btnAddQueue","$b7ONl","getMovieById","_ctx","sent","createMarkupModal","modalList","console","log","t0","message","apply","this","arguments","$5274909fd9dfb2b1$var$onCloseBtn","code","removeEventListener","closeModalBtn"],"version":3,"file":"library.b086a13f.js.map"}